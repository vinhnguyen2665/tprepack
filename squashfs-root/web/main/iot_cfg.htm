<script language="javascript" type="text/javascript">

var RADIO_CFG_IDX_ADD = 0;
var RADIO_CFG_IDX_UPDATE = 1;

var IMPORT_CFG_TYPE_ADD = 0;
var IMPORT_CFG_TYPE_UPDATE = 1;

var MAX_IMPORT_FILE_DESC_LEN = 24
function cfg_import_type_change()
{
	if (document.forms[0].cfg_import_type[RADIO_CFG_IDX_ADD].checked == true)
	{
		$.removeClass($.id("span_cfg_add"), "nv");
		$.addClass($.id("span_cfg_update"), "nv");
	}
	else
	{
		$.removeClass($.id("span_cfg_update"), "nv");
		$.addClass($.id("span_cfg_add"), "nv");
	}
}

function cfg_import_success(import_obj)
{
	var cfglist_obj = {};
	if (IMPORT_CFG_TYPE_ADD == import_obj.importType)
	{
		cfglist_obj.cfgDescription = import_obj.importDescription;
		cfglist_obj.cfgIdx = import_obj.importIdx;
		
		$.act(ACT_ADD, GPON_IOT_CFG_LIST, null, null, cfglist_obj);
		$.exe();

		alert("IOT config file upload success!");
		$.reload();			
	}
	else
	{
		//如果更新的是当前的配置，则需要使其生效
		if (import_obj.importIdx == l_iotChooseIdx)
		{
			if (confirm("IOT config file upload success!\nThe updated IOT config file will take effect after system reboot. Click OK to reboot now?"))
			{
				$.guage(["system is rebooting", "Please wait..."], 100, 420, function(){$.refresh();});
				$.act(ACT_OP, ACT_OP_REBOOT);
				$.exe(true);
			}
		}
		else
		{
			alert("IOT config file upload success!");
			$.reload();				
		}
	}
}

function check_file_desc(desc)
{
	var regExp = /[^\w|\d|_]+/;
	 
	
	if (0 == desc.length)
	{
		alert("\"Description of new config file\" can't be null!");
		return false;
	}
	else if (desc.length > MAX_IMPORT_FILE_DESC_LEN)
	{
		alert("\"Description of new config file\" can be input with max" + MAX_IMPORT_FILE_DESC_LEN + "character!");
		return false;
	}
	else if (regExp.test(desc))
	{
		alert("\"Description of new config file\" can only input with 'character'、'digital'、'underline'!");
		return false;
	}
	
	var obj = null;
	var idx = 0;
	for (idx = 0; idx < l_iotListObjs.length; idx++)
	{
		obj = l_iotListObjs[idx];
		if (desc == obj.cfgDescription)
		{
			alert("\"Description of new config file\"can NOT be the same with the existing config file!");
			return false;
		}
	}	
	
	return true;
}

function cfg_import_submit()
{
	var import_obj = {};
	var formObj = $.d.forms[0];
	
	if (20 <= l_iotListObjs.length)
	{
		alert("Can not add IOT files!The number of IOT files has reached the maximum!");
		return ;		
	}
	
	if ($.id("filename").value == "")
	{
		alert("Please choose the file!");
		return ;
	}
		
	if (document.forms[0].cfg_import_type[RADIO_CFG_IDX_ADD].checked == true)
	{
		import_obj.importType = IMPORT_CFG_TYPE_ADD;
		
		
		
		if (false == check_file_desc($.id("new_cfg_description").value))
		{
			return ;
		}
		
		import_obj.importIdx = getIotListNextIndex();
		import_obj.importDescription = $.id("new_cfg_description").value;
	}
	else
	{
		import_obj.importType = IMPORT_CFG_TYPE_UPDATE;
		import_obj.importIdx = $.id("cfg_description").options[$.id("cfg_description").selectedIndex].value;
	}
	
	$.act(ACT_SET, GPON_IOT_CFG_IMPORT, null, null, import_obj);
	
	if (!$.exe())
	{
		try
		{
			formObj.target = "up_frame";
			formObj.action = "/cgi/iot_import_upload";
			formObj.submit();
		}catch(e){}
		
		$.guage(["IOT config file uploading", "IOT config file uploading..."],5, 880, function(){
			$.guage(["IOT config file updating", "Please wait for updating..."], 5, 880, null);
			
			$.cgi("/cgi/iot_import_burn", null, function(ret)
			{
				if (ret && ret != ERR_NETWORK && ret != ERR_EXIT && ret != ERR_NONE_FILE) 
				{
					$.err("cgi", ret);
				}
				else
				{
					cfg_import_success(import_obj);
				}
				
			}, false, true);
		});
	}
}


function cfg_export_submit()
{

	$.cgi("/cgi/iot_export", null, function(ret)
			{
				if (ret && ret != ERR_NETWORK && ret != ERR_EXIT && ret != ERR_NONE_FILE) 
				{
					$.err("cgi", ret);
				}
				
			}, false, true);
}


function cfg_init()
{
	var cfg_list_html = "<select id=\"cfg_description\" style=\"width:120px\">";
	var idx = 0;
	var iot_list;
	
	/*
	for (idx = 0; idx < 4; idx++)
	{
		cfg_list_html += "<option value=\"" + idx + "\">" + idx + "</option>";
	}
	*/
	
	iot_list = $.act(ACT_GL, GPON_IOT_CFG_LIST, null, null);
	$.exe();
	
	//当前ONU中没有IOT列表，则不允许更新，只允许添加
	if (iot_list.length == 0)
	{
		document.forms[0].cfg_import_type[RADIO_CFG_IDX_ADD].checked = true;
		cfg_import_type_change();
		document.forms[0].cfg_import_type[RADIO_CFG_IDX_UPDATE].disabled = true;
	}
	else
	{
		for (idx = 0; idx < iot_list.length; idx++)
		{
			cfg_list_html += "<option value=\"" + idx + "\">" + iot_list[idx].cfgDescription + "</option>";
		}
	}
	
	cfg_list_html += "</select>";
	$.h($.id("span_cfg_description"), cfg_list_html);

	cfg_import_type_change();
}

function btnChangeIotCfgIdxClick()
{
	var sel = $.id("selIotCfgs");
	var newChooseIdx = sel.options[sel.selectedIndex].value
	if (newChooseIdx != l_iotChooseIdx)
	{
		if (confirm("Reboot the device to make your changes take effect. Are you sure to continue?"))
		{
			if(dmIotChooseIdxSet(newChooseIdx))
			{
				$.guage(["The device is rebooting","Please wait.."], 100, 420, function(){$.refresh();});
				$.act(ACT_OP, ACT_OP_REBOOT);
				$.exe(true);
			}
			else
			{
				alert("Save IOT config failed!");	
			}
		}
	}
}

var l_iotListObjs = null;
var l_iotChooseIdx = 0;
init();

function init()
{
	l_iotListObjs = dmIotListObjsInit();
	l_iotChooseIdx = dmIotChooseIdxInit();
	buildIotListSelect($.id("selIotCfgs"), l_iotListObjs, l_iotChooseIdx);
}

function dmIotListObjsInit()
{
	var list = $.act(ACT_GL, GPON_IOT_CFG_LIST, null, null);
	$.exe();
	return list;
}

function dmIotChooseIdxInit()
{
	var cfg = $.act(ACT_GET, GPON_IOT_CFG, null, null, ["chooseIdx"]);
	$.exe();
	return cfg.chooseIdx;
}

function dmIotChooseIdxSet(idx)
{
	$.act(ACT_SET, GPON_IOT_CFG, null, null, ["chooseIdx="+idx]);
	if (!$.exe())
	{
		return true;
	}
	else
	{
		return false;	
	}
}

function buildIotListSelect(sel, iotListObjs, chooseIdx)
{
	var obj = null;
	var idx = 0;

	for (idx = 0; idx < iotListObjs.length; idx++)
	{
		obj = iotListObjs[idx];
		sel.options.add(new Option(obj.cfgDescription, obj.cfgIdx));
		if (obj.cfgIdx == chooseIdx)
		{
			sel.selectedIndex = idx;
		}
	}
}

function getIotListNextIndex()
{
	var obj = null;
	var idx = 0;
	var cfgIdx = 0;
	var nextidx = 0;

	for (idx = 0; idx < l_iotListObjs.length; idx++)
	{
		obj = l_iotListObjs[idx];
		cfgIdx = parseInt(obj.cfgIdx);
		if (nextidx < cfgIdx)
		{
			nextidx = cfgIdx;
		}
	}
	
	nextidx++;
	return nextidx;
}

</script>

<p class="et" >IOT config file management</p>
<p class="bl"></p>

<div class="con1 M">
<p class="st" ><b>Config</b></p>

<div class="con2">
<p class="L1 T" id="">Select current IOT config: <select style="width:120px" id="selIotCfgs"></select></p>
<p class="br"></p>
</div>
<p class="tail"><input type="button" id="btnChangeIotCfgIdx" class="button L T" value="Save" onClick="btnChangeIotCfgIdxClick();" /></p>
</div>
<p class="bl"></p>

<p class="br"></p>
<p class="br"></p>

<div class="con1 M">
    <p class="st" id="gpon_title_"><b>Upload</b></p>
    
    <form name="form_import_type" action="/cgi/iot_import_burn" method="post" enctype="multipart/form-data">
        <div class="con2">
        <p class="L1 T" id="t_info">
        Click the "Upload" button to upload the IOT config file.The current configuration will be covered with the uploading configuration file.
        </p>
        <p class="br"></p>
    
        <p><b class="item S" id="file_path_">File path:</b>
        <input type="file" name="filename" id="filename" />
        </p>
        <p class="br"></p>
    
    	<p>
        <input type="radio" id="cfg_import_type" name="cfg_import_type" checked onClick="cfg_import_type_change()" >
        Add IOT config file
        </input>
        
        <span id="span_cfg_add">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Description of new config file:<input type="text" class="text" size="14" id="new_cfg_description" maxlength="24" /></span>
        </p>

    	<p>
        <span id="span_iot_update">
    	<input type="radio" id="cfg_import_type" name="cfg_import_type" onClick="cfg_import_type_change()" >
       	Update IOT config file
        </input>
        </span>
        
        <span id="span_cfg_update">&nbsp;&nbsp;&nbsp;&nbsp;Choose config file to update:
        <span id="span_cfg_description"></span>	
		</span>
        </p>
    
        <p class="br"></p>
    	</div>  
        
        <p class="tail"><input type="button" class="button L T" value="Upload" onClick="cfg_import_submit()" /></p>
    </form>
</div>
<p class="bl"></p>

<p class="br"></p>
<p class="br"></p>




<div class="con1 M">
<p class="st" id="gpon_title_"><b>Download</b></p>

<div class="con2">
<p class="L1 T" id="t_info">Click the "Download" button to export current iot config of device to your local computer as a bin file.</p>
<p class="br"></p>
</div>
<form action="/cgi/iot_export">
<p class="tail"><input type="button" class="button L T" value="Download" onClick="$.d.forms[1].submit()" /></p>
</form>
</div>
<p class="bl"></p>

<script language="javascript" type="text/javascript">
cfg_init();
</script>

